{"version":3,"sources":["webpack:///./src/views/backoffice/AnadirArtista.vue","webpack:///./src/views/backoffice/AnadirArtista.vue?fb82"],"names":["artista","reactive","nombre","banner","data","tempData","biografia","albumes","fecha_lanzamiento","cover","canciones","duracion","addNewAlbum","push","addNewSong","i","async","handleAlbumCover","event","url","filePreviewFromInput","file","target","files","handleBanner","handleSubmit","storage","getStorage","storageRef","firebaseRef","projectRef","replaceAll","toLowerCase","coversAlbumes","map","album","index","coverRef","name","uploadBytes","coverURL","getDownloadURL","coverMetadata","getMetadata","Promise","all","then","bannerArtista","bannerRef","bannerURL","bannerMetadata","console","log","forEach","slug","addDoc","collection","apolusFirebase","__exports__"],"mappings":"23CAmFE,MAAMA,EAAUC,eAAS,CACvBC,OAAQ,KACRC,OAAQ,CACNC,KAAM,KACNC,SAAU,MAEZC,UAAW,GACXC,QAAS,CACP,CACEL,OAAQ,KACRM,kBAAmB,KACnBC,MAAO,CACLL,KAAM,KACNC,SAAU,MAEZK,UAAW,CACT,CACER,OAAQ,KACRS,SAAU,WAOpB,SAASC,IACPZ,EAAQO,QAAQM,KAAK,CACnBX,OAAQ,KACRM,kBAAmB,KACnBC,MAAO,CACLL,KAAM,KACNC,SAAU,MAEZK,UAAW,CACT,CACER,OAAQ,KACRS,SAAU,SAMlB,SAASG,EAAWC,GAClBf,EAAQO,QAAQQ,GAAGL,UAAUG,KAAK,CAChCX,OAAQ,KACRS,SAAU,OAIdK,eAAeC,EAAiBC,EAAOH,GACrCf,EAAQO,QAAQQ,GAAGN,MAAMJ,SAAW,CAClCc,UAAWC,eAAqBF,GAChCG,KAAMH,EAAMI,OAAOC,MAAM,IAK7BP,eAAeQ,EAAaN,GAC1BlB,EAAQG,OAAOE,SAAW,CACxBc,UAAWC,eAAqBF,GAChCG,KAAMH,EAAMI,OAAOC,MAAM,IAI7BP,eAAeS,IAEb,MAAMC,EAAUC,iBACVC,EAAaC,eAAYH,EAAS,YAClCI,EAAaD,eAAYD,EAAY5B,EAAQE,OAAO6B,WAAW,IAAK,KAAKC,eAEzEC,EAAgBjC,EAAQO,QAAQ2B,IAAIlB,MAAOmB,EAAOC,KAEtD,MAAMC,EAAWR,eAAYC,EAAYK,EAAM1B,MAAMJ,SAASgB,KAAKiB,YAC7DC,eAAYF,EAAUF,EAAM1B,MAAMJ,SAASgB,MAEjD,MAAMmB,QAAiBC,eAAeZ,eAAYH,EAASW,IACrDK,QAAsBC,eAAYN,GAExCF,EAAM1B,MAAML,KAAO,CACjBkC,KAAMI,EAAcJ,KACpBnB,IAAKqB,WAIHI,QAAQC,IAAIZ,GAAea,KAAM9B,UAErC,MAAM+B,EAAgB/B,UACpB,MAAMgC,EAAYnB,eAAYC,EAAY,UAAS9B,EAAQG,OAAOE,SAASgB,KAAKiB,YAC1EC,eAAYS,EAAWhD,EAAQG,OAAOE,SAASgB,MAErD,MAAM4B,QAAkBR,eAAeZ,eAAYH,EAASsB,IACtDE,QAAuBP,eAAYK,GAEzChD,EAAQG,OAAOC,KAAO,CACpBkC,KAAMY,EAAeZ,KACrBnB,IAAM8B,UAIJF,IACNI,QAAQC,IAAI,2BAELpD,EAAQG,OAAOE,SACtBL,EAAQO,QAAQ8C,QAAQlB,WACfA,EAAM1B,MAAMJ,WAErBL,EAAQsD,KAAOtD,EAAQE,OAAO6B,WAAW,IAAK,KAAKC,oBAE7CuB,eAAOC,eAAWC,eAAgB,YAAazD,GACrDmD,QAAQC,IAAI,iC,ijFC7LlB,MAAMM,EAAc,EAEL","file":"js/chunk-2d0d9f7e.548379c2.js","sourcesContent":["<template>\r\n  <div style=\"max-width: 700px; margin: auto;\">\r\n    <h1><strong>Añadir nuevo artista</strong></h1>\r\n    <form>\r\n    <!-- NOMBRE -->\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\" for=\"nombreArtista\">Nombre</label>\r\n      <input \r\n        class=\"form-control\" \r\n        type=\"text\" \r\n        id=\"nombreArtista\" \r\n        v-model=\"artista.nombre\"\r\n      />\r\n    </div>\r\n    <!-- BIOGRAFIA -->\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\" for=\"bioArtista\">Biografia</label>\r\n      <textarea \r\n        class=\"form-control\" \r\n        type=\"text\" \r\n        id=\"bioArtista\" \r\n        v-model=\"artista.biografia\"\r\n      >\r\n      </textarea>\r\n    </div>\r\n    <!-- BANNER -->\r\n    <div class=\"mb-3\">\r\n      <label class=\"form-label\">Banner</label>\r\n      <input class=\"form-control\" type=\"file\" @change=\"handleBanner($event)\">\r\n      <img class=\"img-fluid my-3\" :src=\"artista.banner.tempData.url\" v-if=\"artista.banner.tempData\">\r\n    </div>\r\n    <!--ALBUM-->\r\n    <div class=\"mb-4\" v-for=\"(album, i) in artista.albumes\">\r\n      <h4><strong>Álbum</strong></h4>\r\n      <!-- NOMBRE ALBUM -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Nombre</label>\r\n        <input class=\"form-control\" type=\"text\" v-model=\"album.nombre\" >\r\n      </div>\r\n      <!-- FECHA DE LANZAMIENTO ALBUM -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Fecha de lanzamiento</label>\r\n        <input class=\"form-control\" type=\"text\" v-model=\"album.fecha_lanzamiento\" >\r\n      </div>\r\n      <!-- COVER ALBUM -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\"> Caratula </label>\r\n        <input class=\"form-control\" type=\"file\" @change=\"handleAlbumCover($event, i)\">\r\n      </div>\r\n      <img class=\"img-fluid my-3\" :src=\"album.cover.tempData.url\" v-if=\"album.cover.tempData\">\r\n      <!-- CANCIONES -->\r\n      <div class=\"canciones\">\r\n        <h5>Canciones</h5>\r\n        <div class=\"form-cancion mb-2\" v-for=\"(cancion, indexCancion) in album.canciones\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-1 pe-0 align-self-center\">\r\n              <span>{{ indexCancion + 1 }}</span>\r\n            </div>\r\n            <div class=\"col-lg-9 ps-0\">\r\n              <input class=\"form-control\" type=\"text\" placeholder=\"Nombre\" v-model=\"cancion.nombre\">\r\n            </div>\r\n            <div class=\"col-lg-2\">\r\n              <input class=\"form-control\" type=\"text\" placeholder=\"Duración\" v-model=\"cancion.duracion\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button class=\"btn btn-secondary btn-sm ms-auto d-block\" @click.prevent=\"addNewSong(i)\"> Añadir nueva canción</button>\r\n      </div>\r\n      <hr>\r\n    </div>\r\n    <button class=\"btn btn-secondary btn-md ms-auto d-block\" @click.prevent=\"addNewAlbum\"> Añadir nuevo álbum</button>\r\n    <button class=\"btn btn-primary ms-auto d-block mt-5\" @click.prevent=\"handleSubmit\" type=\"submit\">Guardar Artista</button>\r\n  </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n  import {reactive} from \"vue\"\r\n  import { db } from \"../../firebase/config\"\r\n  import {addDoc, collection } from \"firebase/firestore\"\r\n  import { getStorage, ref as firebaseRef, uploadBytes, getMetadata, getDownloadURL } from \"firebase/storage\";\r\n  import {filePreviewFromInput} from \"../../composables/filePreview\"\r\n\r\n  const artista = reactive({\r\n    nombre: null,\r\n    banner: {\r\n      data: null,\r\n      tempData: null,\r\n    },\r\n    biografia: \"\",\r\n    albumes: [\r\n      {\r\n        nombre: null,\r\n        fecha_lanzamiento: null,\r\n        cover: {\r\n          data: null,\r\n          tempData: null,\r\n        },\r\n        canciones: [\r\n          {\r\n            nombre: null,\r\n            duracion: null\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  })\r\n\r\n  function addNewAlbum() {\r\n    artista.albumes.push({\r\n      nombre: null,\r\n      fecha_lanzamiento: null,\r\n      cover: {\r\n        data: null,\r\n        tempData: null,\r\n      },\r\n      canciones: [\r\n        {\r\n          nombre: null,\r\n          duracion: null\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  function addNewSong(i) {\r\n    artista.albumes[i].canciones.push({\r\n      nombre: null,\r\n      duracion: null\r\n    })\r\n  }\r\n\r\n  async function handleAlbumCover(event, i) {\r\n    artista.albumes[i].cover.tempData = {\r\n      url: await filePreviewFromInput(event),\r\n      file: event.target.files[0]\r\n    }\r\n    \r\n  }\r\n\r\n  async function handleBanner(event) {\r\n    artista.banner.tempData = {\r\n      url: await filePreviewFromInput(event),\r\n      file: event.target.files[0]\r\n    }\r\n  }\r\n\r\n  async function handleSubmit() {\r\n\r\n    const storage = getStorage()\r\n    const storageRef = firebaseRef(storage, 'artistas')\r\n    const projectRef = firebaseRef(storageRef, artista.nombre.replaceAll(' ', '-').toLowerCase())\r\n\r\n    const coversAlbumes = artista.albumes.map(async (album, index) => {\r\n\r\n      const coverRef = firebaseRef(projectRef, album.cover.tempData.file.name)\r\n      await uploadBytes(coverRef, album.cover.tempData.file)\r\n\r\n      const coverURL = await getDownloadURL(firebaseRef(storage, coverRef))\r\n      const coverMetadata = await getMetadata(coverRef)\r\n      \r\n      album.cover.data = {\r\n        name: coverMetadata.name,\r\n        url: coverURL\r\n      }\r\n    }) \r\n\r\n    await Promise.all(coversAlbumes).then( async () => {\r\n\r\n      const bannerArtista = async () => {\r\n        const bannerRef = firebaseRef(projectRef,`banner/${artista.banner.tempData.file.name}`)\r\n        await uploadBytes(bannerRef, artista.banner.tempData.file)\r\n\r\n        const bannerURL = await getDownloadURL(firebaseRef(storage, bannerRef))\r\n        const bannerMetadata = await getMetadata(bannerRef)\r\n        \r\n        artista.banner.data = {\r\n          name: bannerMetadata.name,\r\n          url:  bannerURL\r\n        }\r\n      }\r\n\r\n      await bannerArtista()\r\n      console.log('Imagenes subidas')\r\n\r\n      delete artista.banner.tempData\r\n      artista.albumes.forEach(album => {\r\n        delete album.cover.tempData\r\n      })\r\n      artista.slug = artista.nombre.replaceAll(' ', '-').toLowerCase()\r\n\r\n      await addDoc(collection(apolusFirebase, 'artistas'), artista)\r\n      console.log('Artista agregado con exito.')\r\n    })\r\n  }\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>","import script from \"./AnadirArtista.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnadirArtista.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}